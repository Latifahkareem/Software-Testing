{
  "info": {
    "name": "Bookstore API Homework",
    "_postman_id": "bookstore-hw-001",
    "description": "Homework 2: Create user, assign books, get books, get user info",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "userId", "value": "" },
    { "key": "username", "value": "" },
    { "key": "randomInt", "value": "1234" },
    { "key": "isbn", "value": "9781449325862" }
  ],
  "item": [
    {
      "name": "Create User",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userName\": \"testuser{{randomInt}}\",\n  \"password\": \"Password123!\"\n}"
        },
        "url": { "raw": "https://bookstore.demoqa.com/Account/v1/User", "protocol": "https", "host": ["bookstore","demoqa","com"], "path": ["Account","v1","User"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "pm.collectionVariables.set('userId', jsonData.userID);",
              "pm.collectionVariables.set('username', jsonData.username);",
              "pm.test('Status code is 201', function() { pm.response.to.have.status(201); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Assign Books",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"collectionOfIsbns\": [{\"isbn\": \"{{isbn}}\"}]\n}"
        },
        "url": { "raw": "https://bookstore.demoqa.com/BookStore/v1/Books", "protocol": "https", "host": ["bookstore","demoqa","com"], "path": ["BookStore","v1","Books"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Books assigned successfully', function() { pm.response.to.have.status(201); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Books",
      "request": {
        "method": "GET",
        "url": { "raw": "https://bookstore.demoqa.com/BookStore/v1/Books", "protocol": "https", "host": ["bookstore","demoqa","com"], "path": ["BookStore","v1","Books"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() { pm.response.to.have.status(200); });",
              "var jsonData = pm.response.json();",
              "pm.test('ISBN exists', function() { pm.expect(jsonData.books.map(b => b.isbn)).to.include(pm.collectionVariables.get('isbn')); });"
            ]
          }
        }
      ]
    },
    {
      "name": "Get User Info",
      "request": {
        "method": "GET",
        "url": { "raw": "https://bookstore.demoqa.com/Account/v1/User/{{userId}}", "protocol": "https", "host": ["bookstore","demoqa","com"], "path": ["Account","v1","User","{{userId}}"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "pm.test('User has assigned book', function() {",
              "  var isBookPresent = jsonData.books.some(b => b.isbn === pm.collectionVariables.get('isbn'));",
              "  pm.expect(isBookPresent).to.be.true;",
              "});"
            ]
          }
        }
      ]
    }
  ]
}
